# Default values for chaos-mesh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# clusterScoped is whether chaos-mesh should manage kubernetes cluster wide chaos
# Also see rbac.create and controllerManager.serviceAccount
clusterScoped: true

# Also see clusterScoped and controllerManager.serviceAccount
rbac:
  create: true

# enableProfiling is a flag to enable pprof in controller-manager and chaos-daemon.
enableProfiling: false


kubectlImage: bitnami/kubectl:latest

controllerManager:
  serviceAccount: chaos-controller-manager

  replicaCount: 1

  image: pingcap/chaos-mesh:latest
  imagePullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 512Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

chaosDaemon:
  image: pingcap/chaos-daemon:latest
  imagePullPolicy: Always
  grpcPort: 31767
  httpPort: 31766

  podAnnotations: {}

  # runtime specifies which container runtime to use. Currently
  # we only supports docker and containerd.
  runtime: docker

  # socketPath specifies the container runtime socket.
  socketPath: /var/run/docker.sock

  # If you are using Kind or using containerd as CRI, you can use the
  # config below to use containerd as the runtime in chaos-daemon.
  # runtime: containerd
  # socketPath: /run/containerd/containerd.sock

  tolerations: []

dashboard:
  create: false

  serviceAccount: chaos-dashboard

  image: pingcap/chaos-dashboard:latest
  imagePullPolicy: Always

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 512Mi

  volume:
    storage: 3Gi
    storageClassName: standard

prometheus:
  create: false

  serviceAccount: prometheus

  image: prom/prometheus:v2.15.2
  imagePullPolicy: IfNotPresent

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 512Mi

  service:
    type: ClusterIP

  volume:
    storage: 2Gi
    storageClassName: standard

preJobs:
  podAnnotations: {}

postJobs:
  podAnnotations: {}

webhook:
  # Setup the webhook using cert-manager
  certManager:
    enabled: false

  # If the deleteSecret is true, we will create a job to delete the secret, Otherwise, do nothing
  deleteSecret: true

  # FailurePolicy defines how unrecognized errors and timeout errors from the admission webhook are handled.
  # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#failure-policy
  FailurePolicy: Ignore

  CRDS:
    - podchaos
    - iochaos
    - timechaos
    - networkchaos
    - kernelchaos

bpfki:
  create: false
  image: pingcap/chaos-kernel:latest
  imagePullPolicy: Always
  grpcPort: 50051
  podAnnotations: {}
