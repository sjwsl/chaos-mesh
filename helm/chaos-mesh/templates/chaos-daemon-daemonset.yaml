apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: chaos-daemon
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: chaos-daemon
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: chaos-daemon
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: chaos-daemon
    {{- with .Values.chaosDaemon.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      hostIPC: true
      hostPID: true
      containers:
        - name: chaos-daemon
          image: {{ .Values.chaosDaemon.image }}
          imagePullPolicy: {{ .Values.chaosDaemon.imagePullPolicy | default "IfNotPresent" }}
          {{- if .Values.chaosDaemon.resources }}
          resources:
{{ toYaml .Values.chaosDaemon.resources | indent 12 }}
          {{- end }}
          command:
            - /usr/local/bin/chaos-daemon
            - --runtime
            - {{ .Values.chaosDaemon.runtime }}
            - --http-port
            - !!str {{ .Values.chaosDaemon.httpPort }}
            - --grpc-port
            - !!str {{ .Values.chaosDaemon.grpcPort }}
          {{- if .Values.enableProfiling }}
            - --pprof
          {{- end }}
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          volumeMounts:
            - name: socket-path
              {{- if eq .Values.chaosDaemon.runtime "docker" }}
              mountPath: /var/run/docker.sock
              {{- else if eq .Values.chaosDaemon.runtime "containerd" }}
              mountPath: /run/containerd/containerd.sock
              {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.chaosDaemon.grpcPort }}
              hostPort: {{ .Values.chaosDaemon.grpcPort }}
            - name: http
              containerPort: {{ .Values.chaosDaemon.httpPort }}
      volumes:
        - name: socket-path
          hostPath:
            path: {{ .Values.chaosDaemon.socketPath | default "/var/run/docker.sock" }}
