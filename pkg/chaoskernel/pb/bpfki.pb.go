// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bpfki.proto

package bpfki

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FailKernRequest_FAILTYPE int32

const (
	FailKernRequest_SLAB FailKernRequest_FAILTYPE = 0
	FailKernRequest_PAGE FailKernRequest_FAILTYPE = 1
	FailKernRequest_BIO  FailKernRequest_FAILTYPE = 2
)

var FailKernRequest_FAILTYPE_name = map[int32]string{
	0: "SLAB",
	1: "PAGE",
	2: "BIO",
}

var FailKernRequest_FAILTYPE_value = map[string]int32{
	"SLAB": 0,
	"PAGE": 1,
	"BIO":  2,
}

func (x FailKernRequest_FAILTYPE) String() string {
	return proto.EnumName(FailKernRequest_FAILTYPE_name, int32(x))
}

func (FailKernRequest_FAILTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{1, 0}
}

type BumpTimeRequest struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid                  uint32   `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Second               int32    `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	Subsecond            int32    `protobuf:"varint,4,opt,name=subsecond,proto3" json:"subsecond,omitempty"`
	Probability          float32  `protobuf:"fixed32,5,opt,name=probability,proto3" json:"probability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BumpTimeRequest) Reset()         { *m = BumpTimeRequest{} }
func (m *BumpTimeRequest) String() string { return proto.CompactTextString(m) }
func (*BumpTimeRequest) ProtoMessage()    {}
func (*BumpTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{0}
}

func (m *BumpTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BumpTimeRequest.Unmarshal(m, b)
}
func (m *BumpTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BumpTimeRequest.Marshal(b, m, deterministic)
}
func (m *BumpTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BumpTimeRequest.Merge(m, src)
}
func (m *BumpTimeRequest) XXX_Size() int {
	return xxx_messageInfo_BumpTimeRequest.Size(m)
}
func (m *BumpTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BumpTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BumpTimeRequest proto.InternalMessageInfo

func (m *BumpTimeRequest) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *BumpTimeRequest) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *BumpTimeRequest) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *BumpTimeRequest) GetSubsecond() int32 {
	if m != nil {
		return m.Subsecond
	}
	return 0
}

func (m *BumpTimeRequest) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

type FailKernRequest struct {
	Pid                  uint32                   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid                  uint32                   `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Ftype                FailKernRequest_FAILTYPE `protobuf:"varint,3,opt,name=ftype,proto3,enum=bpfki.FailKernRequest_FAILTYPE" json:"ftype,omitempty"`
	Headers              []string                 `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	Callchain            []*FailKernRequestFrame  `protobuf:"bytes,5,rep,name=callchain,proto3" json:"callchain,omitempty"`
	Probability          float32                  `protobuf:"fixed32,6,opt,name=probability,proto3" json:"probability,omitempty"`
	Times                uint32                   `protobuf:"varint,7,opt,name=times,proto3" json:"times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FailKernRequest) Reset()         { *m = FailKernRequest{} }
func (m *FailKernRequest) String() string { return proto.CompactTextString(m) }
func (*FailKernRequest) ProtoMessage()    {}
func (*FailKernRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{1}
}

func (m *FailKernRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailKernRequest.Unmarshal(m, b)
}
func (m *FailKernRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailKernRequest.Marshal(b, m, deterministic)
}
func (m *FailKernRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailKernRequest.Merge(m, src)
}
func (m *FailKernRequest) XXX_Size() int {
	return xxx_messageInfo_FailKernRequest.Size(m)
}
func (m *FailKernRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FailKernRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FailKernRequest proto.InternalMessageInfo

func (m *FailKernRequest) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *FailKernRequest) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *FailKernRequest) GetFtype() FailKernRequest_FAILTYPE {
	if m != nil {
		return m.Ftype
	}
	return FailKernRequest_SLAB
}

func (m *FailKernRequest) GetHeaders() []string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *FailKernRequest) GetCallchain() []*FailKernRequestFrame {
	if m != nil {
		return m.Callchain
	}
	return nil
}

func (m *FailKernRequest) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *FailKernRequest) GetTimes() uint32 {
	if m != nil {
		return m.Times
	}
	return 0
}

type FailKernRequestFrame struct {
	Funcname             string   `protobuf:"bytes,1,opt,name=funcname,proto3" json:"funcname,omitempty"`
	Parameters           string   `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Predicate            string   `protobuf:"bytes,3,opt,name=predicate,proto3" json:"predicate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailKernRequestFrame) Reset()         { *m = FailKernRequestFrame{} }
func (m *FailKernRequestFrame) String() string { return proto.CompactTextString(m) }
func (*FailKernRequestFrame) ProtoMessage()    {}
func (*FailKernRequestFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{1, 0}
}

func (m *FailKernRequestFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailKernRequestFrame.Unmarshal(m, b)
}
func (m *FailKernRequestFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailKernRequestFrame.Marshal(b, m, deterministic)
}
func (m *FailKernRequestFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailKernRequestFrame.Merge(m, src)
}
func (m *FailKernRequestFrame) XXX_Size() int {
	return xxx_messageInfo_FailKernRequestFrame.Size(m)
}
func (m *FailKernRequestFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_FailKernRequestFrame.DiscardUnknown(m)
}

var xxx_messageInfo_FailKernRequestFrame proto.InternalMessageInfo

func (m *FailKernRequestFrame) GetFuncname() string {
	if m != nil {
		return m.Funcname
	}
	return ""
}

func (m *FailKernRequestFrame) GetParameters() string {
	if m != nil {
		return m.Parameters
	}
	return ""
}

func (m *FailKernRequestFrame) GetPredicate() string {
	if m != nil {
		return m.Predicate
	}
	return ""
}

type FailSyscallRequest struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid                  uint32   `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Methods              []string `protobuf:"bytes,3,rep,name=methods,proto3" json:"methods,omitempty"`
	Err                  uint32   `protobuf:"varint,4,opt,name=err,proto3" json:"err,omitempty"`
	Probability          float32  `protobuf:"fixed32,5,opt,name=probability,proto3" json:"probability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailSyscallRequest) Reset()         { *m = FailSyscallRequest{} }
func (m *FailSyscallRequest) String() string { return proto.CompactTextString(m) }
func (*FailSyscallRequest) ProtoMessage()    {}
func (*FailSyscallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{2}
}

func (m *FailSyscallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailSyscallRequest.Unmarshal(m, b)
}
func (m *FailSyscallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailSyscallRequest.Marshal(b, m, deterministic)
}
func (m *FailSyscallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailSyscallRequest.Merge(m, src)
}
func (m *FailSyscallRequest) XXX_Size() int {
	return xxx_messageInfo_FailSyscallRequest.Size(m)
}
func (m *FailSyscallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FailSyscallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FailSyscallRequest proto.InternalMessageInfo

func (m *FailSyscallRequest) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *FailSyscallRequest) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *FailSyscallRequest) GetMethods() []string {
	if m != nil {
		return m.Methods
	}
	return nil
}

func (m *FailSyscallRequest) GetErr() uint32 {
	if m != nil {
		return m.Err
	}
	return 0
}

func (m *FailSyscallRequest) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

type StatusResponse struct {
	Ret                  int32    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62eed357eb71de0e, []int{3}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *StatusResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("bpfki.FailKernRequest_FAILTYPE", FailKernRequest_FAILTYPE_name, FailKernRequest_FAILTYPE_value)
	proto.RegisterType((*BumpTimeRequest)(nil), "bpfki.BumpTimeRequest")
	proto.RegisterType((*FailKernRequest)(nil), "bpfki.FailKernRequest")
	proto.RegisterType((*FailKernRequestFrame)(nil), "bpfki.FailKernRequest.frame")
	proto.RegisterType((*FailSyscallRequest)(nil), "bpfki.FailSyscallRequest")
	proto.RegisterType((*StatusResponse)(nil), "bpfki.StatusResponse")
}

func init() { proto.RegisterFile("bpfki.proto", fileDescriptor_62eed357eb71de0e) }

var fileDescriptor_62eed357eb71de0e = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0x8d, 0x31, 0xe6, 0x63, 0xdc, 0x00, 0x5a, 0xb5, 0x91, 0x8b, 0xa2, 0xd6, 0xe2, 0x52, 0x4e,
	0x1c, 0x68, 0x7b, 0xa9, 0xd4, 0x48, 0x58, 0x0d, 0x15, 0x4a, 0x22, 0xd0, 0x3a, 0xaa, 0xd4, 0xe3,
	0x62, 0x0f, 0x65, 0x55, 0xfc, 0xd1, 0xdd, 0x25, 0x12, 0x7f, 0x20, 0xb7, 0xfe, 0x87, 0xfe, 0xd4,
	0x6a, 0x6d, 0x07, 0x1c, 0xa2, 0x48, 0x21, 0xb9, 0xcd, 0xbc, 0xdd, 0x7d, 0x7e, 0x6f, 0xe6, 0xc9,
	0x60, 0xcf, 0xd3, 0xc5, 0x6f, 0x3e, 0x48, 0x45, 0xa2, 0x12, 0x62, 0x65, 0x4d, 0xef, 0xaf, 0x01,
	0x6d, 0x6f, 0x1d, 0xa5, 0xd7, 0x3c, 0x42, 0x8a, 0x7f, 0xd6, 0x28, 0x15, 0xe9, 0x80, 0x99, 0xf2,
	0xd0, 0x31, 0x5c, 0xa3, 0x7f, 0x4c, 0x75, 0xa9, 0x11, 0xc5, 0x43, 0xa7, 0x92, 0x23, 0x8a, 0x87,
	0xe4, 0x04, 0x6a, 0x12, 0x83, 0x24, 0x0e, 0x1d, 0xd3, 0x35, 0xfa, 0x16, 0x2d, 0x3a, 0x72, 0x0a,
	0x4d, 0xb9, 0x9e, 0x17, 0x47, 0xd5, 0xec, 0x68, 0x07, 0x10, 0x17, 0xec, 0x54, 0x24, 0x73, 0x36,
	0xe7, 0x2b, 0xae, 0x36, 0x8e, 0xe5, 0x1a, 0xfd, 0x0a, 0x2d, 0x43, 0xbd, 0x5b, 0x13, 0xda, 0x63,
	0xc6, 0x57, 0x17, 0x28, 0xe2, 0x43, 0xf4, 0x7c, 0x06, 0x6b, 0xa1, 0x36, 0x29, 0x66, 0x72, 0x5a,
	0xc3, 0xf7, 0x83, 0xdc, 0xeb, 0x1e, 0xd5, 0x60, 0x3c, 0x9a, 0x5c, 0x5e, 0xff, 0x9c, 0x9d, 0xd3,
	0xfc, 0x36, 0x71, 0xa0, 0xbe, 0x44, 0x16, 0xa2, 0x90, 0x4e, 0xd5, 0x35, 0xfb, 0x4d, 0x7a, 0xd7,
	0x92, 0x2f, 0xd0, 0x0c, 0xd8, 0x6a, 0x15, 0x2c, 0x19, 0x8f, 0x1d, 0xcb, 0x35, 0xfb, 0xf6, 0xf0,
	0xf4, 0x11, 0xd2, 0x85, 0x60, 0x11, 0xd2, 0xdd, 0xf5, 0x7d, 0x9b, 0xb5, 0x07, 0x36, 0xc9, 0x6b,
	0xb0, 0x14, 0x8f, 0x50, 0x3a, 0xf5, 0xcc, 0x42, 0xde, 0x74, 0x19, 0x58, 0x19, 0x17, 0xe9, 0x42,
	0x63, 0xb1, 0x8e, 0x83, 0x98, 0x45, 0x98, 0xd9, 0x6e, 0xd2, 0x6d, 0x4f, 0xde, 0x01, 0xa4, 0x4c,
	0xdf, 0x52, 0x5a, 0x75, 0x25, 0x3b, 0x2d, 0x21, 0x7a, 0x03, 0xa9, 0xc0, 0x90, 0x07, 0x4c, 0xe5,
	0xd3, 0x68, 0xd2, 0x1d, 0xd0, 0xfb, 0x00, 0x8d, 0xbb, 0x19, 0x90, 0x06, 0x54, 0xfd, 0xcb, 0x91,
	0xd7, 0x39, 0xd2, 0xd5, 0x6c, 0xf4, 0xfd, 0xbc, 0x63, 0x90, 0x3a, 0x98, 0xde, 0x64, 0xda, 0xa9,
	0xf4, 0x6e, 0x0d, 0x20, 0xda, 0xa8, 0xbf, 0x91, 0xda, 0xd8, 0x21, 0xbb, 0x70, 0xa0, 0x1e, 0xa1,
	0x5a, 0x26, 0xa1, 0x74, 0xcc, 0x7c, 0xa8, 0x45, 0xab, 0xef, 0xa2, 0x10, 0x59, 0x2e, 0x8e, 0xa9,
	0x2e, 0x9f, 0x90, 0x88, 0x4f, 0xd0, 0xf2, 0x15, 0x53, 0x6b, 0x49, 0x51, 0xa6, 0x49, 0x2c, 0x51,
	0xb3, 0x08, 0x54, 0x99, 0x06, 0x8b, 0xea, 0x52, 0x23, 0x91, 0xfc, 0x55, 0x0c, 0x43, 0x97, 0xc3,
	0x7f, 0x55, 0x78, 0xe5, 0xcd, 0xc6, 0x17, 0x13, 0x1f, 0xc5, 0x0d, 0x0f, 0x90, 0x7c, 0x05, 0xf0,
	0x51, 0xe9, 0x98, 0xff, 0x60, 0x2b, 0x72, 0x52, 0xac, 0x72, 0x2f, 0xfa, 0xdd, 0x37, 0x05, 0x7e,
	0xff, 0x8b, 0xbd, 0x23, 0x32, 0x82, 0x16, 0xc5, 0x20, 0xb9, 0x41, 0xf1, 0x6c, 0x8a, 0x33, 0xb0,
	0x0b, 0x05, 0x7e, 0x8a, 0xc1, 0xe1, 0xef, 0x3d, 0x68, 0x97, 0x24, 0x3c, 0x8f, 0xe3, 0x0c, 0x6c,
	0xbd, 0xd4, 0xab, 0xab, 0xa9, 0xf0, 0x26, 0xd3, 0xed, 0xfb, 0xbd, 0x44, 0x3f, 0x65, 0x0c, 0x2f,
	0xa0, 0xb0, 0x4b, 0xb9, 0x22, 0x6f, 0x4b, 0xef, 0xef, 0x67, 0xed, 0x71, 0x8a, 0x6f, 0x5b, 0x15,
	0x2f, 0x60, 0x99, 0xd7, 0xb2, 0x1f, 0xe1, 0xc7, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0xa8,
	0xf4, 0xbf, 0x17, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BPFKIServiceClient is the client API for BPFKIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BPFKIServiceClient interface {
	SetTimeVal(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	RecoverTimeVal(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	SetTimeSpec(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	RecoverTimeSpec(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	FailMMOrBIO(ctx context.Context, in *FailKernRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	RecoverMMOrBIO(ctx context.Context, in *FailKernRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	FailSyscall(ctx context.Context, in *FailSyscallRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	RecoverSyscall(ctx context.Context, in *FailSyscallRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type bPFKIServiceClient struct {
	cc *grpc.ClientConn
}

func NewBPFKIServiceClient(cc *grpc.ClientConn) BPFKIServiceClient {
	return &bPFKIServiceClient{cc}
}

func (c *bPFKIServiceClient) SetTimeVal(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/SetTimeVal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) RecoverTimeVal(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/RecoverTimeVal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) SetTimeSpec(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/SetTimeSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) RecoverTimeSpec(ctx context.Context, in *BumpTimeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/RecoverTimeSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) FailMMOrBIO(ctx context.Context, in *FailKernRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/FailMMOrBIO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) RecoverMMOrBIO(ctx context.Context, in *FailKernRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/RecoverMMOrBIO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) FailSyscall(ctx context.Context, in *FailSyscallRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/FailSyscall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bPFKIServiceClient) RecoverSyscall(ctx context.Context, in *FailSyscallRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/bpfki.BPFKIService/RecoverSyscall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BPFKIServiceServer is the server API for BPFKIService service.
type BPFKIServiceServer interface {
	SetTimeVal(context.Context, *BumpTimeRequest) (*StatusResponse, error)
	RecoverTimeVal(context.Context, *BumpTimeRequest) (*StatusResponse, error)
	SetTimeSpec(context.Context, *BumpTimeRequest) (*StatusResponse, error)
	RecoverTimeSpec(context.Context, *BumpTimeRequest) (*StatusResponse, error)
	FailMMOrBIO(context.Context, *FailKernRequest) (*StatusResponse, error)
	RecoverMMOrBIO(context.Context, *FailKernRequest) (*StatusResponse, error)
	FailSyscall(context.Context, *FailSyscallRequest) (*StatusResponse, error)
	RecoverSyscall(context.Context, *FailSyscallRequest) (*StatusResponse, error)
}

// UnimplementedBPFKIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBPFKIServiceServer struct {
}

func (*UnimplementedBPFKIServiceServer) SetTimeVal(ctx context.Context, req *BumpTimeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTimeVal not implemented")
}
func (*UnimplementedBPFKIServiceServer) RecoverTimeVal(ctx context.Context, req *BumpTimeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverTimeVal not implemented")
}
func (*UnimplementedBPFKIServiceServer) SetTimeSpec(ctx context.Context, req *BumpTimeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTimeSpec not implemented")
}
func (*UnimplementedBPFKIServiceServer) RecoverTimeSpec(ctx context.Context, req *BumpTimeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverTimeSpec not implemented")
}
func (*UnimplementedBPFKIServiceServer) FailMMOrBIO(ctx context.Context, req *FailKernRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FailMMOrBIO not implemented")
}
func (*UnimplementedBPFKIServiceServer) RecoverMMOrBIO(ctx context.Context, req *FailKernRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverMMOrBIO not implemented")
}
func (*UnimplementedBPFKIServiceServer) FailSyscall(ctx context.Context, req *FailSyscallRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FailSyscall not implemented")
}
func (*UnimplementedBPFKIServiceServer) RecoverSyscall(ctx context.Context, req *FailSyscallRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverSyscall not implemented")
}

func RegisterBPFKIServiceServer(s *grpc.Server, srv BPFKIServiceServer) {
	s.RegisterService(&_BPFKIService_serviceDesc, srv)
}

func _BPFKIService_SetTimeVal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BumpTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).SetTimeVal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/SetTimeVal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).SetTimeVal(ctx, req.(*BumpTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_RecoverTimeVal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BumpTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).RecoverTimeVal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/RecoverTimeVal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).RecoverTimeVal(ctx, req.(*BumpTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_SetTimeSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BumpTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).SetTimeSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/SetTimeSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).SetTimeSpec(ctx, req.(*BumpTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_RecoverTimeSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BumpTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).RecoverTimeSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/RecoverTimeSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).RecoverTimeSpec(ctx, req.(*BumpTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_FailMMOrBIO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailKernRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).FailMMOrBIO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/FailMMOrBIO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).FailMMOrBIO(ctx, req.(*FailKernRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_RecoverMMOrBIO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailKernRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).RecoverMMOrBIO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/RecoverMMOrBIO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).RecoverMMOrBIO(ctx, req.(*FailKernRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_FailSyscall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailSyscallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).FailSyscall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/FailSyscall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).FailSyscall(ctx, req.(*FailSyscallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BPFKIService_RecoverSyscall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailSyscallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BPFKIServiceServer).RecoverSyscall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bpfki.BPFKIService/RecoverSyscall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BPFKIServiceServer).RecoverSyscall(ctx, req.(*FailSyscallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BPFKIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bpfki.BPFKIService",
	HandlerType: (*BPFKIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetTimeVal",
			Handler:    _BPFKIService_SetTimeVal_Handler,
		},
		{
			MethodName: "RecoverTimeVal",
			Handler:    _BPFKIService_RecoverTimeVal_Handler,
		},
		{
			MethodName: "SetTimeSpec",
			Handler:    _BPFKIService_SetTimeSpec_Handler,
		},
		{
			MethodName: "RecoverTimeSpec",
			Handler:    _BPFKIService_RecoverTimeSpec_Handler,
		},
		{
			MethodName: "FailMMOrBIO",
			Handler:    _BPFKIService_FailMMOrBIO_Handler,
		},
		{
			MethodName: "RecoverMMOrBIO",
			Handler:    _BPFKIService_RecoverMMOrBIO_Handler,
		},
		{
			MethodName: "FailSyscall",
			Handler:    _BPFKIService_FailSyscall_Handler,
		},
		{
			MethodName: "RecoverSyscall",
			Handler:    _BPFKIService_RecoverSyscall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bpfki.proto",
}
