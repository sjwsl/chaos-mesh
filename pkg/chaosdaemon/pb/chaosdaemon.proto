syntax = "proto3";

package chaosdaemon;

import "google/protobuf/empty.proto";

service ChaosDaemon {
  rpc SetNetem(NetemRequest) returns (google.protobuf.Empty) {}
  rpc DeleteNetem(NetemRequest) returns (google.protobuf.Empty) {}

  rpc FlushIpSet(IpSetRequest) returns (google.protobuf.Empty) {}
  rpc FlushIptables(IpTablesRequest) returns (google.protobuf.Empty) {}

  rpc SetTimeOffset(TimeRequest) returns (google.protobuf.Empty) {}
  rpc RecoverTimeOffset(TimeRequest) returns (google.protobuf.Empty) {}

  rpc ContainerKill(ContainerRequest) returns (google.protobuf.Empty) {}
}

message ContainerRequest{
  ContainerAction action = 1;
  string container_id = 2;
}

message NetemRequest {
  Netem netem = 1;
  string container_id = 2;
}

message Netem {
  uint32 time = 1;
  uint32 jitter = 2;
  float delay_corr = 3;
  uint32 limit = 4;
  float loss = 5;
  float loss_corr = 6;
  uint32 gap = 7;
  float duplicate = 8;
  float duplicate_corr = 9;
  float reorder = 10;
  float reorder_corr = 11;
  float corrupt = 12;
  float corrupt_corr = 13;
}

message IpSetRequest {
  IpSet ipset = 1;
  string container_id = 2;
}

message IpSet {
  string name = 1;
  repeated string ips = 2;
}

message IpTablesRequest {
  Rule rule = 1;
  string container_id = 2;
}

message Rule {
  enum Action {
    ADD = 0;
    DELETE = 1;
  }
  Action action = 1;
  enum Direction {
    INPUT = 0;
    OUTPUT = 1;
  }
  Direction direction = 2;
  string set = 3;
}

message TimeRequest {
  string container_id = 1;
  int64 sec = 2;
  int64 nsec = 3;
}

message ContainerAction {
  enum Action {
      KILL = 0;
  }
  Action action = 1;
}